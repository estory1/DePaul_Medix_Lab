import datetime
import os
import json
import re


metadataObjs = []

for root, dirs, filenames in os.walk('data'):

  for fn in filenames:

    if "binnedMF" in fn:
      bmf = {}
      bmf['href'] = os.path.join(root, fn)
      bmf['name'] = re.sub('\/*data\/*', '', root) + ': ' + fn #re.sub('(.*)/(.*)', '\\1: \\2', re.sub('^.*?\/', '', root))
      bmf['note'] = ''
      bmf['dataSeriesNames'] = "Minute #, average speed, average velocity, average angular velocity"
      bmf['dataSeriesNamesDefaultHidden'] = "Minute #"
      bmf['timeSeriesFilterColIdx'] = { "frame": None, "time": 0 }
      bmf['timeSeriesUnit'] = 'minute'
      bmf['type'] = 'binnedMF'

      # Get the last line in an efficient manner. Src: http://stackoverflow.com/a/18603065
      with open(bmf['href'], "rb") as f:
        first = f.readline()     # Read the first line.
        f.seek(-2, 2)            # Jump to the second last byte.
        while f.read(1) != "\n": # Until EOL is found...
          f.seek(-2, 1)        # ...jump back the read byte plus one more.
        last = f.readline()      # Read last line.
      bmf['timeSeriesMax'] = int((last.split(','))[0])

      metadataObjs.append(bmf)

    if "movementFeatures" in fn:
      bmf = {}
      bmf['href'] = os.path.join(root, fn)
      bmf['name'] = re.sub('\/*data\/*', '', root) + ': ' + fn  #re.sub('(.*)/(.*)', '\\1: \\2', re.sub('^.*?\/', '', root))
      bmf['note'] = ''
      bmf['dataSeriesNames'] = "timeSinceSomeUnknownStartingPoint, centroidCoordX, centroidCoordY, speedSinceLastFrame, accelerationSinceLastFrame, angularVelocitySinceLastFrame"
      bmf['dataSeriesNamesDefaultHidden'] = "timeSinceSomeUnknownStartingPoint, centroidCoordX, centroidCoordY"
      bmf['timeSeriesFilterColIdx'] = { "frame": 0, "time": 1 }
      bmf['timeSeriesUnit'] = 'frameId'
      bmf['type'] = 'movementFeatures'

      # Get the last line in an efficient manner. Src: http://stackoverflow.com/a/18603065
      with open(bmf['href'], "rb") as f:
        first = f.readline()     # Read the first line.
        f.seek(-2, 2)            # Jump to the second last byte.
        while f.read(1) != "\n": # Until EOL is found...
          f.seek(-2, 1)        # ...jump back the read byte plus one more.
        last = f.readline()      # Read last line.
      bmf['timeSeriesMax'] = int((last.split(','))[0])

      metadataObjs.append(bmf)

open('dataFilesMetadataObjs.json', 'w').write("/* File automatically generated by genFileMetadata.py on " + datetime.datetime.now().isoformat() + " */\n\nvar dataFilesMetadataObjs = [%s];" % ",\n ".join(json.dumps(m, sort_keys=True, indent=2) for m in metadataObjs))